{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs28 \cf2 // Pattern - Streams - Events\cf3 \
\cf2 // shortest code in SC that makes sound\cf3 \
().class == \cf4 Event\cf3 ;\
().play\
(\
\pard\pardeftab720\ql\qnatural

\fs22 \cf4 SynthDef\cf3 (\cf5 \\smoothSine\cf3 , \{\
	\cf4 |freq = 440, duration = 0.3, amp = 1, pan = 0, gate = 1, out = 0|\cf3 	\
	\cf4 var\cf3  sig, env;\
	env = \cf4 EnvGen\cf3 .kr(\cf4 Env\cf3 .sine(duration, amp), gate, doneAction:2);\
	sig = \cf4 SinOsc\cf3 .ar(freq) * env;\
	sig = \cf4 Pan2\cf3 .ar(sig, env.range(-1, 1));\
	\cf4 Out\cf3 .ar(out, sig);	\
\}).add; \cf2 // .add means the server knows this\cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs28 \cf3 )\
\cf2 // has a default instrument, but can be any SynthDef\cf3 \
\
(instrument:\cf5 \\smoothSine\cf3 ).play; \cf2 // == Synth(\\smoothSine);\cf3 \
\
\cf2 // has built in facilities for pitch, amplitude and durations\cf3 \
\cf2 // this requires some conventions: gate, amp and freq as arguments\cf3 \
\
(freq:440).play\
(degree:2).play\
\cf2 // instead of freq, you can use degree, midinote, define scales\cf3 \
\cf2 // instead of amp, db \cf3 \
\
(instrument:\cf5 \\smoothSine\cf3 , freq:1000).play;\
\
\cf4 Pbind\cf3 ().play; \
\cf4 Pbind\cf3 (\cf5 \\instrument\cf3 , \cf5 \\smoothSine\cf3 ).play; \cf2 // watch out syntaxt symbol, symbol \cf3 \
\cf4 Pbind\cf3 (\cf5 \\instrument\cf3 , \cf5 \\smoothSine\cf3 , \cf5 \\midinote\cf3 , 42).play; \cf2 // watch out syntaxt symbol, symbol \cf3 \
\cf4 Pbind\cf3 (\cf5 \\instrument\cf3 , \cf5 \\smoothSine\cf3 , \cf5 \\midinote\cf3 , 52, \cf5 \\dur\cf3 , 1/4).play; \cf2 // change duration, in beats\cf3 \
\cf2 // scheduled (timed) on SuperCollider's TempoClock\cf3 \
\
( // two at once\
\cf4 Pbind\cf3 (\cf5 \\instrument\cf3 , \cf5 \\smoothSine\cf3 , \cf5 \\midinote\cf3 , 52, \cf5 \\dur\cf3 , 1/2).play; \cf2 // \cf3 \
\cf4 Pbind\cf3 (\cf5 \\instrument\cf3 , \cf5 \\smoothSine\cf3 , \cf5 \\midinote\cf3 , 80, \cf5 \\dur\cf3 , 1/8).play; \cf2 //\
)\
\
// whole library of Pattern s that handle and manipulate these streams\
// example:\
Pseq([\
\
\
\cf3 \
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}